// D

// MARK: - Legend
// В деревне Интернетовка все дома расположены вдоль одной улицы по одну сторону от нее. По другую сторону от этой улицы пока ничего нет, но скоро все будет – школы, магазины, кинотеатры и т.д.

// Для начала в этой деревне решили построить школу. Место для строительства школы решили выбрать так, чтобы суммарное расстояние, которое проезжают ученики от своих домов до школы, было минимально.

// План деревни можно представить в виде прямой, в некоторых целочисленных точках которой находятся дома учеников. Школу также разрешается строить только в целочисленной точке этой прямой (в том числе разрешается строить школу в точке, где расположен один из домов – ведь школа будет расположена с другой стороны улицы).

// Напишите программу, которая по известным координатам домов учеников поможет определить координаты места строительства школы.

// MARK: - Input
// Сначала вводится число N — количество учеников (0 < N < 100001). Далее идут в строго возрастающем порядке координаты домов учеников — целые числа, не превосходящие 2 × 10^9 по модулю.

// MARK: - Output
// Выведите одно целое число — координату точки, в которой лучше всего построить школу. Если ответов несколько, выведите любой из них.

import Foundation

// My version
struct d {
    static func runD() {
        let n = Int(readLine()!)!
        let studs = readLine()!.split(separator: " ")
        
        if n % 2 != 0 {
            print(studs[n / 2])
        } else {
            let stud1 = Int(studs[n/2 - 1])!
            let stud2 = Int(studs[n/2])!
            print((stud1 + stud2) / 2)
        }
    }
}

// Smart version)
//struct d {
//    static func runD() {
//        let n = Int(readLine()!)!
//        let studs = readLine()!.split(separator: " ")
//
//        print(studs[n / 2])
//    }
//}
