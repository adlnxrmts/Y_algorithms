// E

// MARK: - Legend
// На координатной плоскости расположены равнобедренный прямоугольный треугольник ABC с длиной катета d и точка X. Катеты треугольника лежат на осях координат, а вершины расположены в точках: A (0,0), B (d,0), C (0,d).

// Напишите программу, которая определяет взаимное расположение точки X и треугольника. Если точка X расположена внутри или на сторонах треугольника, выведите 0. Если же точка находится вне треугольника, выведите номер ближайшей к ней вершины.

// MARK: - Input
// Сначала вводится натуральное число d (не превосходящее 1000), а затем координаты точки X – два целых числа из диапазона от ­–1000 до 1000.

// MARK: - Output
// Если точка лежит внутри, на стороне треугольника или совпадает с одной из вершин, то выведите число 0. Если точка лежит вне треугольника, то выведите номер вершины треугольника, к которой она расположена ближе всего (1 – к вершине A, 2 – к B, 3 – к C). Если точка расположена на одинаковом расстоянии от двух вершин, выведите ту вершину, номер которой меньше.


import Foundation

struct e {
    static func runE() {
        let d = Double(readLine()!)!
        let cord = readLine()!.split(separator: " ").map() { Double($0)! }
        let (x, y) = (cord[0], cord[1])
        
        if x >= 0 && y >= 0 && x + y <= d {
            print(0)
        } else {
            // You dont need sqrt cus why?
            // Sadly, this is not python, so i need to search for min by hands
            let a = x*x + y*y
            let b = (x-d)*(x-d) + y*y
            let c = x*x + (y-d)*(y-d)
            
            if a <= b && a <= c{
                print(1)
            } else if b <= a && b <= c {
                print(2)
            } else {
                print(3)
            }
        }
    }
}
